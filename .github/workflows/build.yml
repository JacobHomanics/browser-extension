
name: CI

on:
  pull_request:
  merge_group:
  push:
    branches: [master]
  workflow_dispatch:

jobs:

  # INSTALL DEPS
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Add more OS's here
        node-version: ["18.18.0"]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install deps via Yarn
        run: yarn setup
      - name: Check for frozen lockfile
        run: yarn check-lockfile
      - name: Zip node_modules
        run: tar czf node_modules.tar.gz node_modules/
      - name: Upload deps artifacts
        uses: actions/upload-artifact@v3
        with:
          name: node_modules.tar.gz
          path: node_modules.tar.gz

  # BUILD THE EXTENSION
  build:
    runs-on: ${{ matrix.os }}
    needs: install
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - uses: actions/checkout@v3
        with:
            repository: 'rainbow-me/browser-extension-env'
            token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
            path: tmp
      - name: Copy dotenv
        run: cat tmp/dotenv >> .env && rm -rf tmp
      - name: Set IS_TESTING=true
        run: |
          sed -i 's/IS_TESTING.*/IS_TESTING=true/g' .env
      - name: Fetch networks
        run: yarn fetch:networks
      - name: Build the extension
        run: yarn build:webpack
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rainbowbx-${{ github.sha }}
          path: build/
      - name: Remove old screenshots
        run: rm -rf screenshots/*

  # FIREFOX TESTS
  #
  # firefox-e2e-parallel:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 18
  #   needs: [build]
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 4
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/firefoxTestsSetup
  #       with:
  #         gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #     - name: Run e2e parallel (Firefox)
  #       id: FFE2eParallel
  #       continue-on-error: true
  #       run: |
  #           export BROWSER=firefox
  #           export OS=linux
  #           export FIREFOX_BIN="$(pwd)/firefox/firefox"
  #           yarn firefox:manifest && yarn firefox:zip
  #           yarn vitest:parallel
  #     - name: Upload deps artifacts
  #       if: steps.FFE2eParallel.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: screenshots
  #         path: screenshots/
  #     - name: Fail if any tests failed
  #       if: steps.FFE2eParallel.outcome == 'failure'
  #       run: exit 1
  # firefox-e2e-swap:
  #   runs-on: swaps-runner-bx
  #   timeout-minutes: 25
  #   needs: [build]
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 4
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/firefoxTestsSetup
  #       with:
  #         gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #     - name: Run e2e Swap (Firefox)
  #       id: FFE2eSwap
  #       continue-on-error: true
  #       run: |
  #         export BROWSER=firefox
  #         export OS=linux
  #         export FIREFOX_BIN="$(pwd)/firefox/firefox"
  #         yarn firefox:manifest && yarn firefox:zip
  #         yarn vitest:swap
  #     - name: Upload deps artifacts
  #       if: steps.FFE2eSwap.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: screenshots
  #         path: screenshots/
  #     - name: Fail if any tests failed
  #       if: steps.FFE2eSwap.outcome == 'failure'
  #       run: exit 1
  # firefox-e2e-send:
  #   runs-on: send-runner-bx
  #   timeout-minutes: 16
  #   needs: [build]
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 4
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/firefoxTestsSetup
  #       with:
  #         gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #     - name: Run e2e Send (Firefox)
  #       id: FFE2eSend
  #       continue-on-error: true
  #       run: |
  #           export BROWSER=firefox
  #           export OS=linux
  #           export FIREFOX_BIN="$(pwd)/firefox/firefox"
  #           yarn firefox:manifest && yarn firefox:zip
  #           yarn vitest:send
  #     - name: Upload deps artifacts
  #       if: steps.FFE2eSend.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: screenshots
  #         path: screenshots/
  #     - name: Fail if any tests failed
  #       if: steps.FFE2eSend.outcome == 'failure'
  #       run: exit 1
  # firefox-e2e-dappInteractions:
  #   runs-on: dapp-interactions-runner-bx
  #   timeout-minutes: 25
  #   needs: [build]
  #   env:
  #     DISPLAY: :0
  #     VITEST_SEGFAULT_RETRY: 4
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ./.github/actions/firefoxTestsSetup
  #       with:
  #         gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
  #     - name: Run e2e Dapp Interactions (Firefox)
  #       id: FFE2eDappInteractions
  #       continue-on-error: true
  #       run: |
  #         export BROWSER=firefox
  #         export OS=linux
  #         export FIREFOX_BIN="$(pwd)/firefox/firefox"
  #         yarn firefox:manifest && yarn firefox:zip
  #         yarn vitest:dappInteractions
  #     - name: Upload deps artifacts
  #       if: steps.FFE2eDappInteractions.outcome == 'failure'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: screenshots
  #         path: screenshots/
  #     - name: Fail if any tests failed
  #       if: steps.FFE2eDappInteractions.outcome == 'failure'
  #       run: exit 1

  # CHROME TESTS
  chrome-e2e-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        test-type: [onboarding, parallel, swap, send, dappInteractions, optimism-send]
    needs: [build]
    timeout-minutes: 18
    env:
      DISPLAY: :0
      VITEST_SEGFAULT_RETRY: 4
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/chromeTestsSetup
        with:
          gh-access-token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
      - name: Run e2e ${{ matrix.test-type }} (Chrome)
        continue-on-error: true
        run: |
          export BROWSER=chrome
          export OS=${{ matrix.os }}
          export CHROMIUM_BIN=$(find chrome -type f -name 'chrome')
          yarn vitest:${{ matrix.test-type }}
      - name: Upload screenshots artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: screenshots/
      - name: Fail if any tests failed
        if: failure()
        run: exit 1
  
  # UNIT TESTS
  unit-tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal
          override: true
      - name: Fetch networks
        run: yarn fetch:networks
      - name: Install Anvil
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly
      - uses: actions/checkout@v3
        with:
          repository: 'rainbow-me/browser-extension-env'
          token: ${{ secrets.DOTENV_GITHUB_ACCESS_TOKEN }}
          path: tmp
      - name: Copy dotenv
        run: cat tmp/dotenv >> .env && rm -rf tmp
      - name: Set IS_TESTING=true
        run: |
          sed -i 's/IS_TESTING.*/IS_TESTING=true/g' .env
      - name: Run unit tests
        run: yarn test

  # LINT, TYPECHECK, AUDIT
  ci-checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    needs: install
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download deps cache artifacts
        uses: actions/download-artifact@v3
        with:
          name: node_modules.tar.gz
      - name: Unzip node_modules
        run: tar xzf node_modules.tar.gz
      - name: DS Setup
        run: yarn ds:install
      - name: Fetch networks
        run: yarn fetch:networks
      - name: Lint
        run: yarn lint
      - name: Audit CI
        run: yarn audit:ci
      - name: Check types
        run: yarn typecheck
  cleanup:
    runs-on: ubuntu-latest
    needs: [chrome-e2e-tests, unit-tests, ci-checks]
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: node_modules.tar.gz
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: screenshots
